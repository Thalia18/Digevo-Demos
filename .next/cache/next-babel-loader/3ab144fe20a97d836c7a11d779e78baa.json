{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Navbar } from 'rsuite';\n\nconst NavBarInstance = (_ref) => {\n  let {\n    onSelect,\n    activeKey\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onSelect\", \"activeKey\"]);\n\n  return __jsx(Navbar, props, __jsx(Navbar.Header, null, __jsx(\"a\", {\n    href: \"#\",\n    className: \"navbar-brand logo\"\n  }, \"RSUITE\")), __jsx(Navbar.Body, null, __jsx(Nav, {\n    onSelect: onSelect,\n    activeKey: activeKey\n  }, __jsx(Nav.Item, {\n    eventKey: \"1\",\n    icon: __jsx(Icon, {\n      icon: \"home\"\n    })\n  }, \"Home\"), __jsx(Nav.Item, {\n    eventKey: \"2\"\n  }, \"News\"), __jsx(Nav.Item, {\n    eventKey: \"3\"\n  }, \"Products\"), __jsx(Dropdown, {\n    title: \"About\"\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"4\"\n  }, \"Company\"), __jsx(Dropdown.Item, {\n    eventKey: \"5\"\n  }, \"Team\"), __jsx(Dropdown.Item, {\n    eventKey: \"6\"\n  }, \"Contact\"))), __jsx(Nav, {\n    pullRight: true\n  }, __jsx(Nav.Item, {\n    icon: __jsx(Icon, {\n      icon: \"cog\"\n    })\n  }, \"Settings\"))));\n};\n\nclass Navbars extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {\n      activeKey: null\n    };\n  }\n\n  handleSelect(eventKey) {\n    this.setState({\n      activeKey: eventKey\n    });\n  }\n\n  render() {\n    const {\n      activeKey\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"nav-wrapper\"\n    }, __jsx(NavBarInstance, {\n      activeKey: activeKey,\n      onSelect: this.handleSelect\n    }), __jsx(\"hr\", null), __jsx(NavBarInstance, {\n      appearance: \"inverse\",\n      activeKey: activeKey,\n      onSelect: this.handleSelect\n    }), __jsx(\"hr\", null), __jsx(NavBarInstance, {\n      appearance: \"subtle\",\n      activeKey: activeKey,\n      onSelect: this.handleSelect\n    }));\n  }\n\n}\n\nReactDOM.render(__jsx(Navbars, null));","map":{"version":3,"sources":["E:/THALIA20/Python-tf/Tensorflow js/Digevo-Demos/components/Navbar.js"],"names":["Navbar","NavBarInstance","onSelect","activeKey","props","Navbars","React","Component","constructor","handleSelect","bind","state","eventKey","setState","render","ReactDOM"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,cAAc,GAAG,UAAuC;AAAA,MAAtC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAsC;AAAA,MAAZC,KAAY;;AAC5D,SACE,MAAC,MAAD,EAAYA,KAAZ,EACE,MAAC,MAAD,CAAQ,MAAR,QACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC;AAAtB,cADF,CADF,EAME,MAAC,MAAD,CAAQ,IAAR,QACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAEF,QAAf;AAAyB,IAAA,SAAS,EAAEC;AAApC,KACE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC,GAAnB;AAAuB,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAA7B,YADF,EAIE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC;AAAnB,YAJF,EAKE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,QAAQ,EAAC;AAAnB,gBALF,EAME,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC;AAAhB,KACE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC;AAAxB,eADF,EAEE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC;AAAxB,YAFF,EAGE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC;AAAxB,eAHF,CANF,CADF,EAaE,MAAC,GAAD;AAAK,IAAA,SAAS;AAAd,KACE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAhB,gBADF,CAbF,CANF,CADF;AA0BD,CA3BD;;AA6BA,MAAME,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACXR,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AACDM,EAAAA,YAAY,CAACG,QAAD,EAAW;AACrB,SAAKC,QAAL,CAAc;AACZV,MAAAA,SAAS,EAAES;AADC,KAAd;AAGD;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAgB,KAAKQ,KAA3B;AACA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,cAAD;AAAgB,MAAA,SAAS,EAAER,SAA3B;AAAsC,MAAA,QAAQ,EAAE,KAAKM;AAArD,MADF,EAEE,iBAFF,EAGE,MAAC,cAAD;AACE,MAAA,UAAU,EAAC,SADb;AAEE,MAAA,SAAS,EAAEN,SAFb;AAGE,MAAA,QAAQ,EAAE,KAAKM;AAHjB,MAHF,EAQE,iBARF,EASE,MAAC,cAAD;AACE,MAAA,UAAU,EAAC,QADb;AAEE,MAAA,SAAS,EAAEN,SAFb;AAGE,MAAA,QAAQ,EAAE,KAAKM;AAHjB,MATF,CADF;AAiBD;;AAhCmC;;AAmCtCM,QAAQ,CAACD,MAAT,CAAgB,MAAC,OAAD,OAAhB","sourcesContent":["import { Navbar } from 'rsuite';\r\n\r\nconst NavBarInstance = ({ onSelect, activeKey, ...props }) => {\r\n  return (\r\n    <Navbar {...props}>\r\n      <Navbar.Header>\r\n        <a href=\"#\" className=\"navbar-brand logo\">\r\n          RSUITE\r\n        </a>\r\n      </Navbar.Header>\r\n      <Navbar.Body>\r\n        <Nav onSelect={onSelect} activeKey={activeKey}>\r\n          <Nav.Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\r\n            Home\r\n          </Nav.Item>\r\n          <Nav.Item eventKey=\"2\">News</Nav.Item>\r\n          <Nav.Item eventKey=\"3\">Products</Nav.Item>\r\n          <Dropdown title=\"About\">\r\n            <Dropdown.Item eventKey=\"4\">Company</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"5\">Team</Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"6\">Contact</Dropdown.Item>\r\n          </Dropdown>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          <Nav.Item icon={<Icon icon=\"cog\" />}>Settings</Nav.Item>\r\n        </Nav>\r\n      </Navbar.Body>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nclass Navbars extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.state = {\r\n      activeKey: null,\r\n    };\r\n  }\r\n  handleSelect(eventKey) {\r\n    this.setState({\r\n      activeKey: eventKey,\r\n    });\r\n  }\r\n  render() {\r\n    const { activeKey } = this.state;\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n        <NavBarInstance activeKey={activeKey} onSelect={this.handleSelect} />\r\n        <hr />\r\n        <NavBarInstance\r\n          appearance=\"inverse\"\r\n          activeKey={activeKey}\r\n          onSelect={this.handleSelect}\r\n        />\r\n        <hr />\r\n        <NavBarInstance\r\n          appearance=\"subtle\"\r\n          activeKey={activeKey}\r\n          onSelect={this.handleSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Navbars />);\r\n"]},"metadata":{},"sourceType":"module"}